// Code generated by github.com/infraboard/mcube
// DO NOT EDIT

package event

import (
	"bytes"
	"fmt"
	"strings"
)

var (
	enumLevelShowMap = map[Level]string{
		Trace:    "trace",
		Debug:    "debug",
		Info:     "info",
		Warn:     "warn",
		Error:    "error",
		Critical: "critical",
		Disaster: "disaster",
	}

	enumLevelIDMap = map[string]Level{
		"trace":    Trace,
		"debug":    Debug,
		"info":     Info,
		"warn":     Warn,
		"error":    Error,
		"critical": Critical,
		"disaster": Disaster,
	}
)

// ParseLevel Parse Level from string
func ParseLevel(str string) (Level, error) {
	key := strings.Trim(string(str), `"`)
	v, ok := enumLevelIDMap[key]
	if !ok {
		return 0, fmt.Errorf("unknown Status: %s", str)
	}

	return v, nil
}

// Is todo
func (t Level) Is(target Level) bool {
	return t == target
}

// String stringer
func (t Level) String() string {
	v, ok := enumLevelShowMap[t]
	if !ok {
		return "unknown"
	}

	return v
}

// MarshalJSON todo
func (t Level) MarshalJSON() ([]byte, error) {
	b := bytes.NewBufferString(`"`)
	b.WriteString(t.String())
	b.WriteString(`"`)
	return b.Bytes(), nil
}

// UnmarshalJSON todo
func (t *Level) UnmarshalJSON(b []byte) error {
	ins, err := ParseLevel(string(b))
	if err != nil {
		return err
	}
	*t = ins
	return nil
}
